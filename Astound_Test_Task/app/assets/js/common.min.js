var App = App || {};

App.utils = {
    addListener: null,
    removeListener: null
};

if (typeof window.addEventListener === "function") {
    App.utils.addListener = function (e, type, fn) {
        e.addEventListener(type, fn, false);
    }
    App.utils.removeListener = function (e, type, fn) {
        e.removeEventListener(type, fn, false);
    }
}

else if (typeof document.attachEvent === "function") {
    App.utils.addListener = function (e, type, fn) {
        e.attachEvent("on" + type, fn);
    }
    App.utils.removeListener = function (e, type, fn) {
        e.detachEvent("on" + type, fn);
    }
}

else {
    App.utils.addListener = function (e, type, fn) {
        e["on" + type] = fn;
    }
    App.utils.removeListener = function (e, type, fn) {
        e["on" + type] = null;
    }
}
/**
* https://learn.javascript.ru/metrics-window#ширина-высота-страницы-с-учётом-прокрутки
**/
App.libs = App.libs || {};
App.libs.scrollWidth = function () {
	return Math.max(
	  document.body.scrollWidth, document.documentElement.scrollWidth,
	  document.body.offsetWidth, document.documentElement.offsetWidth,
	  document.body.clientWidth, document.documentElement.clientWidth
	);
}

App.libs.getStyle = function (elem) {
  return window.getComputedStyle ? getComputedStyle(elem, "") : elem.currentStyle;
}
var App = App || {};
App.carousel = (function () {

  var carousel = document.querySelector('.js-carousel'),
      list = carousel.querySelector('.js-carousel__elems'),
      listElems = carousel.querySelectorAll('.js-carousel__elem'),
      prevButton = carousel.querySelector('.js-carousel__arrow_prev'),
      nextButton = carousel.querySelector('.js-carousel__arrow_next'),
      position = 0, //the current shift to the left
      width = listElems[0].clientWidth; // image width

  function _leftShift() {
      position = Math.min(position + width, 0)
      list.style.marginLeft = position + 'px';
  };
  function _rightShift() {
      position = Math.max(position - width, -width * (listElems.length - 1));
      list.style.marginLeft = position + 'px';
  };
  function _resize() {
    width = listElems[0].clientWidth;
    if (App.libs.scrollWidth() > 480) { //for correctly view when changing the width
      position = 0;
      list.style.marginLeft = position; 
    }
  }
  function _init() {
    App.utils.addListener(prevButton, 'click', _leftShift);
    App.utils.addListener(nextButton, 'click', _rightShift);
    App.utils.addListener(window, 'resize', _resize);
  }
  return {  
    init: _init
  }
})();
App.carousel.init();
var App = App || {};
App.readMore = (function () {
	var buttonDropDown = document.querySelector(".js-product-info__drop-down"),
		text = document.querySelector(".js-product-info__description-items");

	function _toggle() {
		if ( App.libs.getStyle(text).height === "0px") {
			text.classList.add("product-info__description-items_helper")
		} else {
			text.classList.remove("product-info__description-items_helper")
		}
	}
	function _init() {
		App.utils.addListener(buttonDropDown, 'click', _toggle);
	}
	return {
		init: _init
	}
})();
App.readMore.init();
